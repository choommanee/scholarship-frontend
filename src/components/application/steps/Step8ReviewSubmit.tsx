'use client';

import React, { useState } from 'react';
import { Card, CardBody, CardHeader, CardTitle } from '@/components/ui/Card';
import { Badge } from '@/components/ui/Badge';
import { Button } from '@/components/ui/Button';
import {
  CheckCircleIcon,
  PencilIcon,
  ExclamationTriangleIcon,
  DocumentCheckIcon,
  ClockIcon
} from '@heroicons/react/24/outline';
import { cn } from '@/utils/cn';

export interface ReviewData {
  personalInfo: any;
  addressInfo: any;
  educationHistory: any;
  familyInfo: any;
  financialInfo: any;
  activitiesSkills: any;
  documents: any[];
}

export interface Step8ReviewSubmitProps {
  data: ReviewData;
  onEdit: (step: number) => void;
  onSubmit: () => void;
  isSubmitting: boolean;
  completedSteps: number[];
}

export function Step8ReviewSubmit({
  data,
  onEdit,
  onSubmit,
  isSubmitting,
  completedSteps
}: Step8ReviewSubmitProps) {
  const [termsAccepted, setTermsAccepted] = useState(false);
  const [declarationAccepted, setDeclarationAccepted] = useState(false);

  const canSubmit = termsAccepted && declarationAccepted && completedSteps.length >= 7;

  const sections = [
    {
      step: 1,
      title: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
      icon: 'üë§',
      data: data.personalInfo,
      fields: [
        { label: '‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡πÑ‡∏ó‡∏¢)', value: `${data.personalInfo?.prefix_th || ''} ${data.personalInfo?.first_name_th || ''} ${data.personalInfo?.last_name_th || ''}` },
        { label: '‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)', value: `${data.personalInfo?.prefix_en || ''} ${data.personalInfo?.first_name_en || ''} ${data.personalInfo?.last_name_en || ''}` },
        { label: '‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô', value: data.personalInfo?.citizen_id },
        { label: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', value: data.personalInfo?.email },
        { label: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', value: data.personalInfo?.phone },
        { label: '‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', value: data.personalInfo?.student_id },
        { label: '‡∏Ñ‡∏ì‡∏∞ / ‡∏™‡∏≤‡∏Ç‡∏≤', value: `${data.personalInfo?.faculty || ''} / ${data.personalInfo?.department || ''}` },
        { label: '‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ', value: `‡∏õ‡∏µ ${data.personalInfo?.year_level || ''}` }
      ]
    },
    {
      step: 2,
      title: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà',
      icon: 'üè†',
      data: data.addressInfo,
      fields: [
        { label: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', value: formatAddress(data.addressInfo?.current_address) },
        { label: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ö‡πâ‡∏≤‡∏ô', value: data.addressInfo?.same_as_current ? '‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô' : formatAddress(data.addressInfo?.permanent_address) }
      ]
    },
    {
      step: 3,
      title: '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤',
      icon: 'üéì',
      data: data.educationHistory,
      fields: [
        { label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤', value: `${data.educationHistory?.education_records?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` }
      ]
    },
    {
      step: 4,
      title: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß',
      icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
      data: data.familyInfo,
      fields: [
        { label: '‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö', value: data.familyInfo?.living_with },
        { label: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ö‡∏¥‡∏î‡∏≤', value: data.familyInfo?.father?.living_status },
        { label: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏°‡∏≤‡∏£‡∏î‡∏≤', value: data.familyInfo?.mother?.living_status },
        { label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á', value: `${data.familyInfo?.siblings?.length || 0} ‡∏Ñ‡∏ô` }
      ]
    },
    {
      step: 5,
      title: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
      icon: 'üí∞',
      data: data.financialInfo,
      fields: [
        { label: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', value: `${parseFloat(data.financialInfo?.family_income || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó` },
        { label: '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', value: `${parseFloat(data.financialInfo?.monthly_expenses || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó` },
        { label: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏´‡∏±‡∏ß/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', value: `${parseFloat(data.financialInfo?.income_per_member || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó` },
        { label: '‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô', value: `${parseFloat(data.financialInfo?.debt_amount || 0).toLocaleString()} ‡∏ö‡∏≤‡∏ó` },
        { label: '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢', value: data.financialInfo?.house_type },
        { label: '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á', value: data.financialInfo?.house_ownership }
      ]
    },
    {
      step: 6,
      title: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞',
      icon: '‚≠ê',
      data: data.activitiesSkills,
      fields: [
        { label: '‡∏ó‡∏∏‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö', value: `${data.activitiesSkills?.scholarship_history?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` },
        { label: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°/‡∏ú‡∏•‡∏á‡∏≤‡∏ô', value: `${data.activitiesSkills?.activities?.length || 0} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£` },
        { label: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á', value: data.activitiesSkills?.reference_person?.first_name ? `${data.activitiesSkills.reference_person.title} ${data.activitiesSkills.reference_person.first_name} ${data.activitiesSkills.reference_person.last_name}` : '-' }
      ]
    },
    {
      step: 7,
      title: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö',
      icon: 'üìÑ',
      data: data.documents,
      fields: [
        { label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£', value: `${data.documents?.length || 0} ‡πÑ‡∏ü‡∏•‡πå` }
      ]
    }
  ];

  function formatAddress(address: any): string {
    if (!address) return '-';
    const parts = [
      address.house_number && `‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${address.house_number}`,
      address.village_number && `‡∏´‡∏°‡∏π‡πà ${address.village_number}`,
      address.alley && address.alley,
      address.road && address.road,
      address.subdistrict && `‡∏ï.${address.subdistrict}`,
      address.district && `‡∏≠.${address.district}`,
      address.province && `‡∏à.${address.province}`,
      address.postal_code
    ].filter(Boolean);
    return parts.join(' ');
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <Card>
        <CardBody>
          <div className="text-center py-6">
            <DocumentCheckIcon className="h-16 w-16 text-primary-600 mx-auto mb-4" />
            <h2 className="text-2xl font-bold text-gray-900 mb-2">
              ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
            </h2>
            <p className="text-gray-600">
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
            </p>
          </div>
        </CardBody>
      </Card>

      {/* Completion Status */}
      <Card>
        <CardBody>
          <div className="flex items-center justify-between">
            <div>
              <h3 className="text-lg font-semibold text-gray-900">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</h3>
              <p className="text-sm text-gray-600 mt-1">
                ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö {completedSteps.length} ‡∏à‡∏≤‡∏Å 7 ‡∏™‡πà‡∏ß‡∏ô
              </p>
            </div>
            <div className="text-right">
              <div className="text-3xl font-bold text-primary-600">
                {Math.round((completedSteps.length / 7) * 100)}%
              </div>
              <p className="text-xs text-gray-500">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</p>
            </div>
          </div>

          <div className="mt-4">
            <div className="w-full bg-gray-200 rounded-full h-3">
              <div
                className="bg-gradient-to-r from-primary-600 to-primary-700 h-3 rounded-full transition-all duration-500"
                style={{ width: `${(completedSteps.length / 7) * 100}%` }}
              />
            </div>
          </div>

          {completedSteps.length < 7 && (
            <div className="mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-3">
              <div className="flex items-start">
                <ExclamationTriangleIcon className="h-5 w-5 text-yellow-600 mt-0.5 flex-shrink-0" />
                <p className="ml-2 text-sm text-yellow-800">
                  ‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
                </p>
              </div>
            </div>
          )}
        </CardBody>
      </Card>

      {/* Review Sections */}
      <div className="space-y-4">
        {sections.map((section) => {
          const isComplete = completedSteps.includes(section.step);

          return (
            <Card key={section.step}>
              <CardHeader className={cn(
                'flex flex-row items-center justify-between',
                !isComplete && 'bg-yellow-50'
              )}>
                <div className="flex items-center space-x-3">
                  <span className="text-2xl">{section.icon}</span>
                  <div>
                    <CardTitle className="text-base">{section.title}</CardTitle>
                    {!isComplete && (
                      <p className="text-xs text-yellow-700 mt-1">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</p>
                    )}
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  {isComplete ? (
                    <Badge color="success">
                      <CheckCircleIcon className="h-3 w-3 mr-1" />
                      ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
                    </Badge>
                  ) : (
                    <Badge color="warning">
                      <ExclamationTriangleIcon className="h-3 w-3 mr-1" />
                      ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö
                    </Badge>
                  )}
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => onEdit(section.step)}
                    leftIcon={<PencilIcon className="h-4 w-4" />}
                  >
                    ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                  </Button>
                </div>
              </CardHeader>
              <CardBody>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {section.fields.map((field, index) => (
                    <div key={index}>
                      <dt className="text-xs font-medium text-gray-500">{field.label}</dt>
                      <dd className="text-sm text-gray-900 mt-1">{field.value || '-'}</dd>
                    </div>
                  ))}
                </div>
              </CardBody>
            </Card>
          );
        })}
      </div>

      {/* Terms and Conditions */}
      <Card>
        <CardBody>
          <h3 className="text-lg font-semibold text-gray-900 mb-4">‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á</h3>

          <div className="space-y-4">
            {/* Terms Checkbox */}
            <div className="border border-gray-200 rounded-lg p-4">
              <div className="flex items-start">
                <input
                  type="checkbox"
                  id="terms"
                  checked={termsAccepted}
                  onChange={(e) => setTermsAccepted(e.target.checked)}
                  className="mt-1 h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
                />
                <label htmlFor="terms" className="ml-3 text-sm text-gray-700">
                  <strong>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î</strong> ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
                  ‡πÇ‡∏î‡∏¢‡πÑ‡∏î‡πâ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß
                  <div className="mt-2 p-3 bg-gray-50 rounded text-xs max-h-40 overflow-y-auto">
                    <ul className="list-disc pl-5 space-y-1">
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£</li>
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏∏‡∏ô (GPA ‚â• 2.50)</li>
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏à‡∏∞‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡πà‡∏á‡∏Ñ‡∏£‡∏±‡∏î</li>
                      <li>‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡πá‡∏à ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ó‡∏∏‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</li>
                    </ul>
                  </div>
                </label>
              </div>
            </div>

            {/* Declaration Checkbox */}
            <div className="border border-gray-200 rounded-lg p-4">
              <div className="flex items-start">
                <input
                  type="checkbox"
                  id="declaration"
                  checked={declarationAccepted}
                  onChange={(e) => setDeclarationAccepted(e.target.checked)}
                  className="mt-1 h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
                />
                <label htmlFor="declaration" className="ml-3 text-sm text-gray-700">
                  <strong>‡∏Ñ‡∏≥‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á</strong> ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏ß‡πà‡∏≤:
                  <div className="mt-2 p-3 bg-gray-50 rounded text-xs">
                    <ul className="list-disc pl-5 space-y-1">
                      <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏ß‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>
                      <li>‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πâ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏•‡∏≠‡∏°‡πÅ‡∏õ‡∏•‡∏á</li>
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏ô‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô (‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß)</li>
                      <li>‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏ï‡∏Å‡∏•‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ì‡∏∞‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£</li>
                    </ul>
                  </div>
                </label>
              </div>
            </div>
          </div>

          {!canSubmit && (
            <div className="mt-4 bg-red-50 border border-red-200 rounded-lg p-3">
              <div className="flex items-start">
                <ExclamationTriangleIcon className="h-5 w-5 text-red-600 mt-0.5 flex-shrink-0" />
                <div className="ml-2 text-sm text-red-800">
                  <p className="font-medium">‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ</p>
                  <ul className="list-disc pl-5 mt-1 space-y-1">
                    {!termsAccepted && <li>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î</li>}
                    {!declarationAccepted && <li>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á</li>}
                    {completedSteps.length < 7 && <li>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ó‡∏∏‡∏Å‡∏™‡πà‡∏ß‡∏ô</li>}
                  </ul>
                </div>
              </div>
            </div>
          )}
        </CardBody>
      </Card>

      {/* Estimated Processing Time */}
      <Card>
        <CardBody>
          <div className="flex items-start space-x-3">
            <ClockIcon className="h-6 w-6 text-primary-600 flex-shrink-0 mt-1" />
            <div>
              <h3 className="text-md font-semibold text-gray-900">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤</h3>
              <p className="text-sm text-gray-600 mt-1">
                ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô <strong>3-5 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</strong>
              </p>
              <p className="text-sm text-gray-600 mt-1">
                ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏©‡∏ì‡πå ‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô <strong>7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</strong>
              </p>
              <p className="text-sm text-gray-600 mt-1">
                ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏†‡∏≤‡∏¢‡πÉ‡∏ô <strong>30 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</strong> ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£
              </p>
            </div>
          </div>
        </CardBody>
      </Card>

      {/* Important Notice */}
      <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4">
        <div className="flex">
          <ExclamationTriangleIcon className="h-5 w-5 text-yellow-600 flex-shrink-0" />
          <div className="ml-3">
            <p className="text-sm text-yellow-800">
              <strong>‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:</strong> ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£" ‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
              ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
