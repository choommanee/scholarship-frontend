"use client";

import React, { useState, useEffect } from 'react';
import { 
  UserIcon,
  PlusIcon,
  PencilIcon,
  ShieldCheckIcon,
  FunnelIcon,
  MagnifyingGlassIcon,
  EnvelopeIcon,
  PhoneIcon,
  ClockIcon,
  CheckCircleIcon,
  XCircleIcon,
  ExclamationTriangleIcon
} from '@heroicons/react/24/outline';
import { Card, CardBody } from '@/components/ui/Card';
import { Button } from '@/components/ui/Button';
import { Input } from '@/components/ui/Input';
import CreateUserModal from '@/components/admin/CreateUserModal';
import EditUserModal from '@/components/admin/EditUserModal';
import ManageRolesModal from '@/components/admin/ManageRolesModal';
import { 
  User, 
  UserFilters, 
  CreateUserRequest, 
  UpdateUserRequest,
  userService 
} from '@/services/user.service';
import { authService } from '@/services/auth.service';

const AdminUsersPage: React.FC = () => {
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(true);
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const [totalUsers, setTotalUsers] = useState(0);
  
  // Filter states
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedRole, setSelectedRole] = useState('');
  const [selectedStatus, setSelectedStatus] = useState('');
  const [showFilters, setShowFilters] = useState(false);
  
  // Modal states
  const [showCreateModal, setShowCreateModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [showRolesModal, setShowRolesModal] = useState(false);
  const [selectedUser, setSelectedUser] = useState<User | null>(null);
  const [isCreating, setIsCreating] = useState(false);
  const [isUpdating, setIsUpdating] = useState(false);

  const currentUser = authService.getUser();

  useEffect(() => {
    loadUsers();
  }, [currentPage, searchTerm, selectedRole, selectedStatus]);

  const loadUsers = async () => {
    try {
      setLoading(true);
      const filters: UserFilters = {
        page: currentPage,
        limit: 10,
        search: searchTerm || undefined,
        role: selectedRole || undefined,
        is_active: selectedStatus === 'active' ? true : selectedStatus === 'inactive' ? false : undefined
      };

      const response = await userService.getUsers(filters);
      setUsers(response.data);
      setTotalPages(Math.ceil(response.pagination.total / response.pagination.limit));
      setTotalUsers(response.pagination.total);
    } catch (error) {
      console.error('Failed to load users:', error);
      alert('ไม่สามารถโหลดข้อมูลผู้ใช้ได้');
    } finally {
      setLoading(false);
    }
  };

  const handleCreateUser = async (userData: CreateUserRequest) => {
    try {
      setIsCreating(true);
      await userService.createUser(userData);
      await loadUsers();
      alert('สร้างผู้ใช้ใหม่เรียบร้อยแล้ว');
    } catch (error) {
      console.error('Create user error:', error);
      alert(error instanceof Error ? error.message : 'ไม่สามารถสร้างผู้ใช้ได้');
      throw error;
    } finally {
      setIsCreating(false);
    }
  };

  const handleUpdateUser = async (userId: string, userData: UpdateUserRequest) => {
    try {
      setIsUpdating(true);
      await userService.updateUser(userId, userData);
      await loadUsers();
      alert('อัปเดตข้อมูลผู้ใช้เรียบร้อยแล้ว');
    } catch (error) {
      console.error('Update user error:', error);
      alert(error instanceof Error ? error.message : 'ไม่สามารถอัปเดตข้อมูลผู้ใช้ได้');
      throw error;
    } finally {
      setIsUpdating(false);
    }
  };

  const handleToggleUserStatus = async (user: User) => {
    if (!confirm(`คุณต้องการ${user.is_active ? 'ระงับ' : 'เปิด'}การใช้งานของ ${userService.formatFullName(user)} หรือไม่?`)) {
      return;
    }

    try {
      if (user.is_active) {
        await userService.deactivateUser(user.user_id);
      } else {
        await userService.reactivateUser(user.user_id);
      }
      await loadUsers();
      alert(`${user.is_active ? 'ระงับ' : 'เปิด'}การใช้งานเรียบร้อยแล้ว`);
    } catch (error) {
      console.error('Toggle user status error:', error);
      alert(error instanceof Error ? error.message : 'ไม่สามารถเปลี่ยนสถานะผู้ใช้ได้');
    }
  };

  const handleEditUser = (user: User) => {
    setSelectedUser(user);
    setShowEditModal(true);
  };

  const handleManageRoles = (user: User) => {
    setSelectedUser(user);
    setShowRolesModal(true);
  };

  const handleRoleUpdated = () => {
    loadUsers();
  };

  const handlePageChange = (page: number) => {
    setCurrentPage(page);
  };

  const handleSearchChange = (value: string) => {
    setSearchTerm(value);
    setCurrentPage(1);
  };

  const handleFilterChange = (type: 'role' | 'status', value: string) => {
    if (type === 'role') {
      setSelectedRole(value);
    } else {
      setSelectedStatus(value);
    }
    setCurrentPage(1);
  };

  const clearFilters = () => {
    setSearchTerm('');
    setSelectedRole('');
    setSelectedStatus('');
    setCurrentPage(1);
  };

  const getStatusIcon = (isActive: boolean) => {
    return isActive ? CheckCircleIcon : XCircleIcon;
  };

  // Statistics
  const activeUsers = users.filter(u => u.is_active).length;
  const inactiveUsers = users.filter(u => !u.is_active).length;

  if (loading && users.length === 0) {
    return (
      <div className="min-h-screen bg-secondary-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4"></div>
          <p className="text-secondary-600 font-sarabun">กำลังโหลดข้อมูล...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="px-4 sm:px-6 lg:px-8">
      {/* Header */}
      <div className="mb-8">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold text-secondary-900 font-sarabun mb-2">
              User Management
            </h1>
            <p className="text-secondary-600 font-sarabun">
              Manage user accounts, access permissions and system settings
            </p>
          </div>
          <Button
            variant="primary"
            onClick={() => setShowCreateModal(true)}
            className="font-sarabun"
          >
            <PlusIcon className="h-4 w-4 mr-2" />
            Add User
          </Button>
        </div>
      </div>

      {/* Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <Card>
          <CardBody className="p-6 text-center">
            <div className="inline-flex p-3 rounded-xl bg-blue-50 mb-4">
              <UserIcon className="h-6 w-6 text-blue-600" />
            </div>
            <p className="text-2xl font-bold text-secondary-900 font-sarabun">{totalUsers}</p>
            <p className="text-sm text-secondary-600 font-sarabun">Total</p>
          </CardBody>
        </Card>
        <Card>
          <CardBody className="p-6 text-center">
            <div className="inline-flex p-3 rounded-xl bg-green-50 mb-4">
              <CheckCircleIcon className="h-6 w-6 text-green-600" />
            </div>
            <p className="text-2xl font-bold text-secondary-900 font-sarabun">{activeUsers}</p>
            <p className="text-sm text-secondary-600 font-sarabun">Active</p>
          </CardBody>
        </Card>
        <Card>
          <CardBody className="p-6 text-center">
            <div className="inline-flex p-3 rounded-xl bg-red-50 mb-4">
              <XCircleIcon className="h-6 w-6 text-red-600" />
            </div>
            <p className="text-2xl font-bold text-secondary-900 font-sarabun">{inactiveUsers}</p>
            <p className="text-sm text-secondary-600 font-sarabun">Inactive</p>
          </CardBody>
        </Card>
        <Card>
          <CardBody className="p-6 text-center">
            <div className="inline-flex p-3 rounded-xl bg-purple-50 mb-4">
              <ShieldCheckIcon className="h-6 w-6 text-purple-600" />
            </div>
            <p className="text-2xl font-bold text-secondary-900 font-sarabun">{users.length}</p>
            <p className="text-sm text-secondary-600 font-sarabun">Current Page</p>
          </CardBody>
        </Card>
      </div>

            {/* Search and Filters */}
            <div className="mb-6 space-y-4">
              <div className="flex flex-col sm:flex-row gap-4">
                <div className="flex-1">
                  <div className="relative">
                    <MagnifyingGlassIcon className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-secondary-400" />
                    <Input
                      type="text"
                      placeholder="ค้นหาด้วยชื่อ, อีเมล, รหัสนักศึกษา หรือ เลขประจำตัว"
                      value={searchTerm}
                      onChange={(e) => handleSearchChange(e.target.value)}
                      className="pl-10 font-sarabun"
                    />
                  </div>
                </div>
                <div className="flex gap-2">
                  <Button
                    variant="outline"
                    onClick={() => setShowFilters(!showFilters)}
                    className="font-sarabun"
                  >
                    <FunnelIcon className="h-4 w-4 mr-2" />
                    ตัวกรอง
                  </Button>
                  {(searchTerm || selectedRole || selectedStatus) && (
                    <Button
                      variant="outline"
                      onClick={clearFilters}
                      className="font-sarabun text-red-600 hover:text-red-700"
                    >
                      ล้างตัวกรอง
                    </Button>
                  )}
                </div>
              </div>

              {/* Filters */}
              {showFilters && (
                <Card>
                  <CardBody className="p-4">
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-secondary-700 mb-2 font-sarabun">
                          บทบาท
                        </label>
                        <select
                          value={selectedRole}
                          onChange={(e) => handleFilterChange('role', e.target.value)}
                          className="w-full px-3 py-2 border border-secondary-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-sarabun"
                        >
                          <option value="">ทุกบทบาท</option>
                          <option value="admin">ผู้ดูแลระบบ</option>
                          <option value="committee">คณะกรรมการ</option>
                          <option value="student">นักศึกษา</option>
                          <option value="staff">เจ้าหน้าที่</option>
                          <option value="user">ผู้ใช้ทั่วไป</option>
                        </select>
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-secondary-700 mb-2 font-sarabun">
                          สถานะ
                        </label>
                        <select
                          value={selectedStatus}
                          onChange={(e) => handleFilterChange('status', e.target.value)}
                          className="w-full px-3 py-2 border border-secondary-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-sarabun"
                        >
                          <option value="">ทุกสถานะ</option>
                          <option value="active">ใช้งานได้</option>
                          <option value="inactive">ไม่ใช้งาน</option>
                          <option value="pending">รอยืนยัน</option>
                        </select>
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-secondary-700 mb-2 font-sarabun">
                          คณะ/หน่วยงาน
                        </label>
                        <select
                          className="w-full px-3 py-2 border border-secondary-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-sarabun"
                        >
                          <option value="">ทุกคณะ</option>
                          <option value="medicine">คณะแพทยศาสตร์</option>
                          <option value="engineering">คณะวิศวกรรมศาสตร์</option>
                          <option value="science">คณะวิทยาศาสตร์</option>
                          <option value="dentistry">คณะทันตแพทยศาสตร์</option>
                          <option value="pharmacy">คณะเภสัชศาสตร์</option>
                        </select>
                      </div>
                    </div>
                  </CardBody>
                </Card>
              )}
            </div>

            {/* Users List */}
            <div className="space-y-4">
              {loading ? (
                <div className="flex justify-center py-8">
                  <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
                </div>
              ) : users.length === 0 ? (
                <Card>
                  <CardBody className="p-8 text-center">
                    <UserIcon className="h-12 w-12 text-secondary-400 mx-auto mb-4" />
                    <h3 className="text-lg font-medium text-secondary-900 mb-2 font-sarabun">
                      ไม่พบผู้ใช้งาน
                    </h3>
                    <p className="text-secondary-600 font-sarabun">
                      {searchTerm || selectedRole || selectedStatus 
                        ? 'ไม่พบผู้ใช้งานที่ตรงกับเงื่อนไขการค้นหา'
                        : 'ยังไม่มีผู้ใช้งานในระบบ'
                      }
                    </p>
                  </CardBody>
                </Card>
              ) : (
                users.map((user) => {
                  const StatusIcon = getStatusIcon(user.is_active);
                  return (
                    <Card key={user.user_id} className="hover:shadow-md transition-shadow">
                      <CardBody className="p-6">
                        <div className="flex items-start justify-between">
                          <div className="flex items-start space-x-4 flex-1">
                            <div className="flex-shrink-0">
                              <div className="h-14 w-14 rounded-full bg-gradient-to-br from-blue-100 to-blue-200 flex items-center justify-center border-2 border-blue-300">
                                <UserIcon className="h-7 w-7 text-blue-600" />
                              </div>
                            </div>
                            <div className="flex-1 min-w-0">
                              <div className="flex items-center space-x-3 mb-2">
                                <h3 className="text-xl font-semibold text-secondary-900 truncate font-sarabun">
                                  {userService.formatFullName(user)}
                                </h3>
                                <StatusIcon className={`h-5 w-5 ${user.is_active ? 'text-green-500' : 'text-red-500'}`} />
                                <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium font-sarabun ${
                                  user.is_active
                                    ? 'bg-green-100 text-green-800 border border-green-200'
                                    : 'bg-red-100 text-red-800 border border-red-200'
                                }`}>
                                  {user.is_active ? 'ใช้งานได้' : 'ไม่ใช้งาน'}
                                </span>
                              </div>
                              
                              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                <div>
                                  <div className="flex items-center text-sm text-secondary-600 mb-1">
                                    <EnvelopeIcon className="h-4 w-4 mr-2" />
                                    <span className="font-sarabun font-medium">อีเมล:</span>
                                  </div>
                                  <p className="text-sm text-secondary-900 font-sarabun ml-6">{user.email}</p>
                                </div>
                                {user.phone && (
                                  <div>
                                    <div className="flex items-center text-sm text-secondary-600 mb-1">
                                      <PhoneIcon className="h-4 w-4 mr-2" />
                                      <span className="font-sarabun font-medium">โทรศัพท์:</span>
                                    </div>
                                    <p className="text-sm text-secondary-900 font-sarabun ml-6">{user.phone}</p>
                                  </div>
                                )}
                                <div>
                                  <div className="flex items-center text-sm text-secondary-600 mb-1">
                                    <UserIcon className="h-4 w-4 mr-2" />
                                    <span className="font-sarabun font-medium">ชื่อผู้ใช้:</span>
                                  </div>
                                  <p className="text-sm text-secondary-900 font-sarabun ml-6">{user.username}</p>
                                </div>
                                <div>
                                  <div className="flex items-center text-sm text-secondary-600 mb-1">
                                    <span className="font-sarabun font-medium">รหัสนักศึกษา/เจ้าหน้าที่:</span>
                                  </div>
                                  <p className="text-sm text-secondary-900 font-sarabun">
                                    {user.student_id || user.employee_id || 'ไม่ระบุ'}
                                  </p>
                                </div>
                              </div>

                              <div className="flex flex-wrap gap-2 mb-4">
                                <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 font-sarabun border border-blue-200">
                                  <ShieldCheckIcon className="h-4 w-4 mr-1" />
                                  {user.role === 'admin' ? 'ผู้ดูแลระบบ' : 
                                   user.role === 'committee' ? 'คณะกรรมการ' : 
                                   user.role === 'student' ? 'นักศึกษา' :
                                   user.role === 'staff' ? 'เจ้าหน้าที่' : 'ผู้ใช้ทั่วไป'}
                                </span>
                                {user.department && (
                                  <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800 font-sarabun border border-purple-200">
                                    {user.department}
                                  </span>
                                )}
                                {user.faculty && (
                                  <span className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-indigo-100 text-indigo-800 font-sarabun border border-indigo-200">
                                    {user.faculty}
                                  </span>
                                )}
                              </div>

                              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                                <div>
                                  <div className="flex items-center text-secondary-500 mb-1">
                                    <ClockIcon className="h-4 w-4 mr-1" />
                                    <span className="font-sarabun font-medium">วันที่สร้าง</span>
                                  </div>
                                  <p className="font-sarabun text-secondary-900">
                                    {new Date(user.created_at).toLocaleDateString('th-TH', {
                                      year: 'numeric',
                                      month: 'short',
                                      day: 'numeric'
                                    })}
                                  </p>
                                </div>
                                {user.updated_at && (
                                  <div>
                                    <div className="flex items-center text-secondary-500 mb-1">
                                      <ClockIcon className="h-4 w-4 mr-1" />
                                      <span className="font-sarabun font-medium">อัปเดตล่าสุด</span>
                                    </div>
                                    <p className="font-sarabun text-secondary-900">
                                      {new Date(user.updated_at).toLocaleDateString('th-TH', {
                                        year: 'numeric',
                                        month: 'short',
                                        day: 'numeric'
                                      })}
                                    </p>
                                  </div>
                                )}
                                <div>
                                  <div className="flex items-center text-secondary-500 mb-1">
                                    <span className="font-sarabun font-medium">สถานะล็อกอิน</span>
                                  </div>
                                  <p className="font-sarabun text-secondary-900">
                                    {user.last_login_at 
                                      ? new Date(user.last_login_at).toLocaleDateString('th-TH')
                                      : 'ยังไม่เคยเข้าสู่ระบบ'
                                    }
                                  </p>
                                </div>
                                <div>
                                  <div className="flex items-center text-secondary-500 mb-1">
                                    <span className="font-sarabun font-medium">User ID</span>
                                  </div>
                                  <p className="font-mono text-xs text-secondary-700 bg-secondary-50 px-2 py-1 rounded">
                                    {user.user_id}
                                  </p>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        {/* Actions */}
                        <div className="flex items-center justify-between border-t border-secondary-200 pt-4 mt-6">
                          <div className="flex space-x-3">
                            <Button 
                              variant="outline" 
                              size="sm" 
                              onClick={() => handleEditUser(user)}
                              className="font-sarabun hover:bg-blue-50 hover:border-blue-300"
                            >
                              <PencilIcon className="h-4 w-4 mr-2" />
                              แก้ไขข้อมูล
                            </Button>
                            <Button 
                              variant="outline" 
                              size="sm"
                              onClick={() => handleManageRoles(user)}
                              className="font-sarabun hover:bg-purple-50 hover:border-purple-300"
                            >
                              <ShieldCheckIcon className="h-4 w-4 mr-2" />
                              จัดการสิทธิ์
                            </Button>
                            <Button 
                              variant="outline" 
                              size="sm"
                              onClick={() => handleToggleUserStatus(user)}
                              className={`font-sarabun ${
                                user.is_active 
                                  ? 'text-red-600 hover:text-red-700 hover:border-red-300 hover:bg-red-50' 
                                  : 'text-green-600 hover:text-green-700 hover:border-green-300 hover:bg-green-50'
                              }`}
                            >
                              {user.is_active ? (
                                <>
                                  <XCircleIcon className="h-4 w-4 mr-2" />
                                  ระงับการใช้งาน
                                </>
                              ) : (
                                <>
                                  <CheckCircleIcon className="h-4 w-4 mr-2" />
                                  เปิดใช้งาน
                                </>
                              )}
                            </Button>
                          </div>
                          <div className="text-xs text-secondary-500 font-sarabun">
                            จำนวนทุนที่สมัคร: {user.scholarship_applications?.length || 0} ทุน
                          </div>
                        </div>
                      </CardBody>
                    </Card>
                  );
                })
              )}
            </div>

            {/* Pagination */}
            {totalPages > 1 && (
              <div className="flex items-center justify-between mt-8">
                <div className="text-sm text-secondary-600 font-sarabun">
                  แสดง {((currentPage - 1) * 10) + 1} - {Math.min(currentPage * 10, totalUsers)} จาก {totalUsers} รายการ
                </div>
                <div className="flex space-x-2">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => handlePageChange(currentPage - 1)}
                    disabled={currentPage <= 1}
                    className="font-sarabun"
                  >
                    ก่อนหน้า
                  </Button>
                  
                  {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
                    const pageNum = Math.max(1, Math.min(totalPages - 4, currentPage - 2)) + i;
                    return (
                      <Button
                        key={pageNum}
                        variant={currentPage === pageNum ? "primary" : "outline"}
                        size="sm"
                        onClick={() => handlePageChange(pageNum)}
                        className="font-sarabun"
                      >
                        {pageNum}
                      </Button>
                    );
                  })}
                  
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => handlePageChange(currentPage + 1)}
                    disabled={currentPage >= totalPages}
                    className="font-sarabun"
                  >
                    ถัดไป
                  </Button>
                </div>
              </div>
            )}
          </div>

      {/* Modals */}
      <CreateUserModal
        isOpen={showCreateModal}
        onClose={() => setShowCreateModal(false)}
        onSubmit={handleCreateUser}
        isLoading={isCreating}
      />

      <EditUserModal
        isOpen={showEditModal}
        onClose={() => setShowEditModal(false)}
        onSubmit={handleUpdateUser}
        user={selectedUser}
        isLoading={isUpdating}
      />

      <ManageRolesModal
        isOpen={showRolesModal}
        onClose={() => setShowRolesModal(false)}
        user={selectedUser}
        onRoleUpdated={handleRoleUpdated}
      />
    </div>
  );
};

export default AdminUsersPage;
